{"ast":null,"code":"var _jsxFileName = \"/Users/swaroopreddyvudumula/Downloads/Swaroop weather App Assignment complete by monday/src/components/Home.js\";\nimport { Card, CircularProgress, List, ListItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport WeatherCard from \"./common/WeatherCard\";\nimport LocationHeader from \"./LocationHeader\";\nimport GetForecastOffice from \"../hooks/GetForecastOffice\";\nimport GetForecast from \"../hooks/GetForecast\";\nimport GetUserLocation from \"../hooks/GetUserLocation\";\n\nfunction Home() {\n  const userLocation = GetUserLocation();\n  const {\n    forecastURL,\n    city,\n    state\n  } = GetForecastOffice(userLocation);\n  const weatherData = GetForecast(forecastURL);\n\n  if (!weatherData.length) {\n    return /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LocationHeader, {\n    city: city,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    style: {\n      marginTop: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, weatherData.map(eachDay => /*#__PURE__*/React.createElement(ListItem, {\n    key: eachDay.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WeatherCard, {\n    eachDay: eachDay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/swaroopreddyvudumula/Downloads/Swaroop weather App Assignment complete by monday/src/components/Home.js"],"names":["Card","CircularProgress","List","ListItem","React","WeatherCard","LocationHeader","GetForecastOffice","GetForecast","GetUserLocation","Home","userLocation","forecastURL","city","state","weatherData","length","marginTop","map","eachDay","name"],"mappings":";AAAA,SAASA,IAAT,EAAeC,gBAAf,EAAiCC,IAAjC,EAAuCC,QAAvC,QAAuD,mBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AACA,SAASC,IAAT,GAAgB;AACd,QAAMC,YAAY,GAAGF,eAAe,EAApC;AACA,QAAM;AAAEG,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,MAA+BP,iBAAiB,CAACI,YAAD,CAAtD;AACA,QAAMI,WAAW,GAAGP,WAAW,CAACI,WAAD,CAA/B;;AAEA,MAAI,CAACG,WAAW,CAACC,MAAjB,EAAyB;AACvB,wBAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAEH,IAAtB;AAA4B,IAAA,KAAK,EAAEC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,SAAS,EAAE;AAAb,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGF,WAAW,CAACG,GAAZ,CAAiBC,OAAD,iBACf,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,OAAO,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CAFH,CAFF,CADF;AAaD;;AAED,eAAeT,IAAf","sourcesContent":["import { Card, CircularProgress, List, ListItem } from \"@material-ui/core\";\nimport React from \"react\";\nimport WeatherCard from \"./common/WeatherCard\";\nimport LocationHeader from \"./LocationHeader\";\nimport GetForecastOffice from \"../hooks/GetForecastOffice\";\nimport GetForecast from \"../hooks/GetForecast\";\nimport GetUserLocation from \"../hooks/GetUserLocation\";\nfunction Home() {\n  const userLocation = GetUserLocation();\n  const { forecastURL, city, state } = GetForecastOffice(userLocation);\n  const weatherData = GetForecast(forecastURL);\n\n  if (!weatherData.length) {\n    return <CircularProgress />;\n  }\n  return (\n    <Card>\n      <LocationHeader city={city} state={state} />\n      <List style={{ marginTop: \"60px\" }}>\n        {/* ^^ Example of using inline styles */}\n        {weatherData.map((eachDay) => (\n          <ListItem key={eachDay.name}>\n            <WeatherCard eachDay={eachDay} />\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}